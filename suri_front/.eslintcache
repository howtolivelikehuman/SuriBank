[{"D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\page\\Main.js":"1","D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\index.js":"2","D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\page\\Login.js":"3","D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\page\\makePB.js":"4","D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\component\\SubHeader.js":"5","D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\component\\make_pb\\ProblemElement.js":"6","D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\component\\problem_filter\\Filter.js":"7"},{"size":7962,"mtime":1613836497832,"results":"8","hashOfConfig":"9"},{"size":541,"mtime":1612147215375,"results":"10","hashOfConfig":"9"},{"size":11322,"mtime":1613315198653,"results":"11","hashOfConfig":"9"},{"size":3238,"mtime":1613836423069,"results":"12","hashOfConfig":"9"},{"size":1159,"mtime":1613315198651,"results":"13","hashOfConfig":"9"},{"size":3457,"mtime":1613836423064,"results":"14","hashOfConfig":"9"},{"size":897,"mtime":1613836423065,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1g635lm",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\page\\Main.js",["32"],"import React, { Component } from 'react'\r\nimport api from '../util/API'\r\nimport Filter from '../component/problem_filter/Filter'\r\nimport SubHeader from '../component/SubHeader'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Main extends Component{\r\n    state={\r\n        subject_data:null,\r\n        now_page:0,\r\n        total_page: 5,\r\n        type:\"\",\r\n        subject:[],\r\n        professor:[],\r\n        pb_list:null\r\n    }\r\n    get_problem_list_data_for_test = () => {\r\n        let problem=[\r\n            {\r\n                id:\"1\", \r\n                title:\"첫 번째 문제 예제\", \r\n                subject:\"수미방\", \r\n                uploader:\"카와잇규짱\", \r\n                professor:\"김민호\",\r\n                score:3\r\n            },\r\n            {\r\n                id:\"2\", \r\n                title:\"디비에 빨리 문제 테이블 만들쟈\", \r\n                subject:\"데이터베이스설계\", \r\n                uploader:\"엄대장\", \r\n                professor:\"홍의경\",\r\n                score:5\r\n            },\r\n            {\r\n                id:\"3\", \r\n                title:\"오늘 야식은 치킨이닭\", \r\n                subject:\"웹정보시스템\", \r\n                uploader:\"문초코\", \r\n                professor:\"황혜수\",\r\n                score:1\r\n            },\r\n        ]\r\n\r\n        this.setState({pb_list:problem})\r\n    }\r\n    get_subject_data = () => {\r\n        api.get('problem/subjectList')\r\n        .then(res => {\r\n            this.setState({subject_data:res.data})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    get_subject_name = (code) => {\r\n        const subject = this.state.subject_data.find(subject => subject['code'] === code)\r\n        return subject['name']\r\n    }\r\n    get_problem_list_data = () =>{\r\n        //TO DO: get으로 하는 방법?\r\n        api\r\n        .post('/problem/list',\r\n        {\r\n            page:this.state.now_page,\r\n            size:20,\r\n            sort:\"registerdate\",\r\n            order:\"desc\",\r\n            filter: {\r\n                type: this.state.type,\r\n                subject: this.state.subject,\r\n                professor:this.state.professor\r\n            }\r\n<<<<<<< HEAD\r\n=======\r\n\r\n>>>>>>> a89ba121ac10c708b6498f6071758c5b929f2c3d\r\n        })\r\n        .then(res => {\r\n            if(res.status!=200){\r\n                alert(\"문제 불러오기 실패\")\r\n                console.log(res)\r\n                return null\r\n            }\r\n            else{\r\n                //console.log(res)\r\n                this.setState({\r\n                    total_page:res.data.totalPages,\r\n                    pb_list:res.data.probleminfo\r\n                })\r\n            }\r\n        })\r\n    }\r\n    page_item_click_handler = (i) => {\r\n        if(i>=0 && i<this.state.total_page)\r\n            this.setState({now_page:i},() => {\r\n                this.get_problem_list_data()\r\n            })\r\n    }\r\n\r\n    set_problem_list = () => {\r\n        let problem_list = []\r\n        problem_list = this.state.pb_list.map(problem => {\r\n            return(\r\n                <Link to={{pathname: '/problem', data : {id: problem.id}}} className=\"list-group-item list-group-item-action\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-1\">{problem.id}</div>\r\n                    <div className=\"col-3\">{problem.title}</div>\r\n                    <div className=\"col-3\">{this.get_subject_name(problem.subject)}</div>\r\n                    <div className=\"col-2\">{problem.professor}</div>\r\n                    <div className=\"col-2\">{problem.uploader}</div>\r\n                    <div className=\"col-1\">{problem.score}</div>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        })\r\n\r\n        return problem_list\r\n    }\r\n    set_filter = (title, filter_element) => {\r\n        var filter = this.state[title]\r\n        filter[filter_element] = !filter[filter_element]\r\n        if(title === 'subject') this.setState({subject:filter})\r\n        else if(title === 'professor') this.setState({professor:filter})\r\n        else if(title === 'type') this.setState({type:filter})\r\n    }\r\n    \r\n\r\n    render(){\r\n        if(this.state.subject_data===null){\r\n            this.get_subject_data()\r\n            return null\r\n        }\r\n        if(this.state.pb_list==null){\r\n            this.get_problem_list_data()\r\n            return null\r\n        }\r\n        else{\r\n            let page=[]\r\n            let problem_list = this.set_problem_list()\r\n            let current_page = this.state.now_page\r\n            var tot_page=this.state.total_page\r\n            for(let i = 0; i<tot_page; i++){\r\n                if(current_page==i)\r\n                    page.push(<li className=\"page-item active\" onClick={()=>this.page_item_click_handler(i)}><a className=\"page-link\" href=\"javascript:void(0);\">{i}</a></li>)\r\n                else \r\n                    page.push(<li className=\"page-item\" onClick={()=>this.page_item_click_handler(i)}><a className=\"page-link\" href=\"javascript:void(0);\">{i}</a></li>)\r\n            }\r\n            return(\r\n                <div className=\"container-fluid\">\r\n                    <SubHeader />\r\n                    <div className=\"main_body row\">\r\n                        <nav id=\"sidebar\" className=\"col-md-4 \">\r\n                            <div className=\"sidebar-header\">\r\n                            </div>\r\n                            <Filter filter_list={['기출','예제']} title={'type'} setFilter={this.set_filter}/>\r\n                            <Filter filter_list={['컴퓨터개론','객체지향프로그래밍','논리회로및실습']} title={'subject'} setFilter={this.set_filter}/>\r\n                        </nav>\r\n                        <div className=\"col-md-8\" id=\"content\">\r\n                            <nav className=\"navbar ml-auto navbar-expand-sm\">\r\n                                <ul class=\"navbar-nav\">\r\n                                    <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" onClick={()=>this.props.history.push('../makePB')}>+</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" href=\"#\">nav 2</a>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                            </nav>\r\n                            <div>\r\n                                <ul class=\"list-group list-group-flush\">\r\n                                <div className=\"list-group-item\">\r\n                                    <div className=\"row\">\r\n                                    <div className=\"col-1\">#</div>\r\n                                    <div className=\"col-3\">제목</div>\r\n                                    <div className=\"col-3\">과목</div>\r\n                                    <div className=\"col-2\">교수</div>\r\n                                    <div className=\"col-2\">작성자</div>\r\n                                    <div className=\"col-1\">score</div>\r\n                                    </div>\r\n                                </div>\r\n                                    {problem_list}\r\n                                </ul>\r\n\r\n                            </div>\r\n                            <div className=\"my-10\"> \r\n                                <ul class=\"pagination justify-content-center\">\r\n                                    <li className=\"page-item\"><a className=\"page-link\" onClick={()=> this.page_item_click_handler(current_page-1)}>Previous</a></li>\r\n                                    {page}\r\n                                    <li className=\"page-item\"><a className=\"page-link\" onClick={()=> this.page_item_click_handler(current_page+1)}>Next</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Main",["33","34"],"D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\index.js",[],"D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\page\\Login.js",["35","36","37","38","39","40","41","42","43"],"D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\page\\makePB.js",["44","45","46"],"D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\component\\SubHeader.js",["47"],"D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\component\\make_pb\\ProblemElement.js",["48","49","50","51"],"D:\\Hyunsik\\program\\SuriBank\\suri_front\\src\\component\\problem_filter\\Filter.js",["52"],{"ruleId":null,"fatal":true,"severity":2,"message":"53","line":72,"column":4},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":34,"column":16,"nodeType":"60","messageId":"61","endLine":34,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":38,"column":35,"nodeType":"60","messageId":"61","endLine":38,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":69,"column":26,"nodeType":"60","messageId":"61","endLine":69,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":76,"column":31,"nodeType":"60","messageId":"61","endLine":76,"endColumn":33},{"ruleId":"58","severity":1,"message":"59","line":88,"column":26,"nodeType":"60","messageId":"61","endLine":88,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":96,"column":40,"nodeType":"60","messageId":"61","endLine":96,"endColumn":42},{"ruleId":"58","severity":1,"message":"59","line":128,"column":27,"nodeType":"60","messageId":"61","endLine":128,"endColumn":29},{"ruleId":"58","severity":1,"message":"62","line":151,"column":31,"nodeType":"60","messageId":"61","endLine":151,"endColumn":33},{"ruleId":"63","severity":1,"message":"64","line":166,"column":29,"nodeType":"65","endLine":166,"endColumn":110},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":47,"column":23,"nodeType":"72","messageId":"73","endLine":47,"endColumn":35},{"ruleId":"58","severity":1,"message":"59","line":68,"column":26,"nodeType":"60","messageId":"61","endLine":68,"endColumn":28},{"ruleId":"63","severity":1,"message":"64","line":15,"column":21,"nodeType":"65","endLine":15,"endColumn":95},{"ruleId":"66","severity":1,"message":"74","line":1,"column":15,"nodeType":"68","messageId":"69","endLine":1,"endColumn":23},{"ruleId":"66","severity":1,"message":"75","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":11},{"ruleId":"58","severity":1,"message":"59","line":47,"column":11,"nodeType":"60","messageId":"61","endLine":47,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":47,"column":27,"nodeType":"60","messageId":"61","endLine":47,"endColumn":29},{"ruleId":"66","severity":1,"message":"76","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},"Parsing error: Unexpected token\n\n  70 |                 professor:this.state.professor\n  71 |             }\n> 72 | <<<<<<< HEAD\n     |    ^\n  73 | =======\n  74 | \n  75 | >>>>>>> a89ba121ac10c708b6498f6071758c5b929f2c3d","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'useState' is defined but never used.","'api' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]